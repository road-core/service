name: Push to GHCR
on:
  push:
    branches: [main]
  workflow_dispatch:

env:
    IMAGE_NAME: ${{ github.event.repository.name }}
    IMAGE_TAGS: latest ${{ github.sha }}
    IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}

jobs:
  push-ghcr:
    name: Build and push image
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
    permissions:
        contents: read
        packages: write

    steps:

      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          # this might remove tools that are actually needed,
          # if set to "true" but frees about 6 GB
          tool-cache: false

      # Checkout push-to-registry action github repository
      - name: Checkout Push to Registry action
        uses: actions/checkout@v4

      - name: Install podman
        run: |
          sudo apt-get install podman -y

      # Build image using Buildah action
      - name: Build Image
        id: build_image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.IMAGE_NAME }}
          tags: ${{ env.IMAGE_TAGS }}
          oci: true
          containerfiles: |
            ./Containerfile
                                                                            
      # Push the image to GHCR (Image Registry)
      - name: Push To GHCR
        uses: redhat-actions/push-to-registry@v2
        id: push
        with:
          image: ${{ steps.build_image.outputs.image }}
          tags: ${{ steps.build_image.outputs.tags }}
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Wait before retrying
        if: steps.push.outcome == 'failure'
        run: sleep 1m

      # Push the image to GHCR (Image Registry)
      - name: Push To GHCR
        uses: redhat-actions/push-to-registry@v2
        id: push_second_attempt
        if: steps.push.outcome == 'failure'
        with:
          image: ${{ steps.build_image.outputs.image }}
          tags: ${{ steps.build_image.outputs.tags }}
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ github.token }}